version: "2"

services: 

  # GRAYLOG --------------------------------

  elastic-graylog:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.5
    ports:
      - "9210:9200"
      # - "9310:9300"
    container_name: elastic-graylog
    restart: always
    environment: 
      - node.name=elastic-graylog
      - "TZ=America/Sao_Paulo"
      - cluster.name=graylog
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
      # Disable X-Pack security
      - xpack.security.enabled=false
      - xpack.watcher.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.security.audit.enabled=false
      - xpack.ml.enabled=false
      - xpack.graph.enabled=false
      # - "ES_JAVA_OPTS=-Xms1g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    networks: 
      - apm
    volumes:
      # - "elastic-graylog:/usr/share/elasticsearch/data"
      - "./config/elastic/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "./config/elastic/data-graylog:/usr/share/elasticsearch/data"
      - "./config/elastic/plugins:/usr/share/elasticsearch/plugins"

  mongodb:
    container_name: mongodb
    image: mongo:4
    restart: always
    ports:
        - "27017:27017"
    environment:
      - "TZ=America/Sao_Paulo"
    networks:
      - apm
    volumes:
      # - "mongodb:/var/data"
      - "./config/mongodb/data-graylog:/var/data"

  graylog:
    image: graylog/graylog:3.2.2
    container_name: graylog
    restart: always
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: http://127.0.0.1:9000/
      TZ: America/Sao_Paulo
      GRAYLOG_PASSWORD_SECRET: adm
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      GRAYLOG_WEB_ENDPOINT_URI: http://127.0.0.1:9000/api
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://elasticsearch:9210"
      # GRAYLOG_TRANSPORT_EMAIL_ENABLED: "true"
      # GRAYLOG_TRANSPORT_EMAIL_HOSTNAME: smtp.yourdomain.com
      # GRAYLOG_TRANSPORT_EMAIL_PORT: 25
      # GRAYLOG_TRANSPORT_EMAIL_USE_AUTH: "false"
      # GRAYLOG_TRANSPORT_EMAIL_USE_TLS: "false"
      # GRAYLOG_TRANSPORT_EMAIL_USE_SSL: "false"
    links:
      - mongodb:mongo
      - elastic-graylog:elasticsearch
    depends_on:
      - mongodb
      - elastic-graylog
    networks:
      - apm
    ports:
      - "9000:9000"
      - "12202:12202/udp"
    volumes:
      # - "graylog:/usr/share/graylog/data/config"
      - ./config/graylog/data/journal:/usr/share/graylog/data/journal
      - ./config/graylog/config:/usr/share/graylog/data/config
      - ./config/graylog/graylog/plugin:/usr/share/graylog/plugin

  http-graylog:
    container_name: http-graylog
    image: httpd:latest
    restart: always
    environment:                                                    
      - "TZ=America/Sao_Paulo"
    ports:
      - "82:80"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12202"
        tag: "http-graylog-12202"
    networks:
      - apm

  # ELK --------------------------------

  elastic-elk:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    ports:
      - "9200:9200"
      # - "9300:9300"
    container_name: elastic-elk
    restart: always
    environment: 
      - "TZ=America/Sao_Paulo"
      - cluster.name=elk
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    networks: 
      - apm
    volumes:
      # - "elastic-elk:/usr/share/elasticsearch/data"
      - "./config/elastic/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "./config/elastic/data-elk:/usr/share/elasticsearch/data"
      - "./config/elastic/plugins:/usr/share/elasticsearch/plugins"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.1
    container_name: logstash
    ports:
      - "12201:12201/udp"
      - "5000:5000"
    links:
      - elastic-elk:elasticsearch
    restart: always
    depends_on:
      - elastic-elk
    volumes:
      # - "logstash:/usr/share/logstash/config" 
      - ./config/logstash/config/logstash.conf:/etc/logstash/conf.d/logstash.conf
      - ./config/logstash/logs:/tmp/logs
    # command: -e 'input { gelf {} } filter { json { source => "message" } date { match => ["timestamp", "UNIX"] } mutate { remove_field => [ "command", "created" ] } }  output { elasticsearch { hosts => ["elasticsearch:9200"] } stdout { } }'
    # command: -e 'input { gelf { port => 12201 } } output { stdout {} elasticsearch { hosts => ["http://elasticsearch:9200"] } }'
    networks:
      - apm

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.1
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - "http.host=0.0.0.0"
      - "network.host=0.0.0.0"
      - "discovery.type=single-node"
      - "TZ=America/Sao_Paulo"
    volumes:
      # - "kibana:/usr/share/kibana/config"
      - "./config/kibana/config:/usr/share/kibana/config"
    links:
      - elastic-elk:elasticsearch
    depends_on:
      - elastic-elk
    ports: 
      - 5601:5601
    restart: always
    networks: 
      - apm

  http-logstash:
    container_name: http-logstash
    image: httpd:latest
    restart: always
    environment:                                                    
      - "TZ=America/Sao_Paulo"
    ports:
      - "81:80"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: "http-logstash-12201"
    networks:
      - apm

  # PROM --------------------------------

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #     - "./prometheus.yml:/etc/prometheus/prometheus.yml"
  #     - "./alert.rules:/etc/prometheus/alert.rules"
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - "monitoring-network"
  
  # prometheus:
  #   image: prom/prometheus
  #   # user: root
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #     - prometheus_data:/prometheus
  #   command:
  #     # - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/etc/prometheus'
  #     # - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     # - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - "monitoring-network"
  #   # labels:
  #   #   org.label-schema.group: "monitoring"

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   # volumes:
  #   #   - "grafana:/var/lib/grafana"
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - "monitoring-network"
  #   depends_on:
  #     - prometheus

  # alertmanager:
  #   image: prom/alertmanager
  #   container_name: alertmanager
  #   # volumes:
  #   #   - "alertmanager:/etc/alertmanager"
  #   ports:
  #     - 9093:9093
  #   networks:
  #     - "monitoring-network"


# apm:
#     image: docker.elastic.co/apm/apm-server:7.6.1
#     ports:
#       - 8200:8200
#     volumes:
#       - ./apm-server.docker.yml:/usr/share/apm-server/apm-server.yml"
#     environment:
#       output.elasticsearch.hosts: '["elasticsearch:9200"]'

networks: 
  apm:
    driver: bridge
  # monitoring-network:
  #   driver: bridge

# volumes:
  # elastic-graylog:
  #   driver: local
  # mongodb:
  #   driver: local
  # kibana:
  #   driver: local
  # graylog:
  #   driver: local
  # elastic-elk:
  #   driver: local
  # logstash:
  #   driver: local
  # grafana:
  #   driver: local
  # alertmanager:
  #   driver: local
  # prometheus_data: {}
  # grafana_data: {}
