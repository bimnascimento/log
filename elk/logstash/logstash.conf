input {
  #  file {
  #     path => "/tmp/logs/rails/*.log"
  #     start_position => "beginning"
  #     type => "rails-logs"
  #  }
  #  file {
  #     path => "/tmp/logs/nginx/*.log"
  #     start_position => "beginning"
  #     type => "nginx-logs"
  #  }
   file {
      path => "/tmp/logs/*.log"
      start_position => "beginning"
      # type => "file-logs"
      # sincedb_path => "/dev/null"
   }
   gelf { 
      # type => 'gelf'
      port => 12201 
   }
}
filter {
  # grok {
  #   match => {"message" => ["%{TIMESTAMP_ISO8601:logdate} %{WORD:hostname} %{WORD:container_name}: %{GREEDYDATA:[@metadata][messageline]}",
  #   "%{TIMESTAMP_ISO8601:logdate} %{WORD:hostname} %{WORD:container}\[%{INT:haprorxy_id}\]: %{GREEDYDATA:[@metadata][messageline]}"]}
  # }
  # mutate {
  #   remove_field => ["message", "@timestamp"]
  # }
  # json {
  #   source => "[@metadata][messageline]"
  # }
  # json { 
  #   source => "message" 
  # } 
  # date { 
  #   match => ["timestamp", "UNIX"]
  # }
  # if [type] == "rails-logs" {
  #   grok {
  #     match => {"message" => "[DFEWI], \[%{TIMESTAMP_ISO8601:occurrency_time} #%{POSINT:pid}\] %{LOGLEVEL:loglevel} -- : \[%{UUID:uuid}\] %{GREEDYDATA:message}"}
  #     overwrite => [ "message" ]
  #     remove_field => ["uuid"]
  #   }
  # }
  # if [type] == "nginx-logs" {
  #   grok {
  #     match => {"message" => "%{IPORHOST:clientip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) (?:/\"(?:%{URI:referrer}|-)\"|%{QS:referrer}) %{QS:agent}"}
  #   }
  #   date {
  #     match => [ "timestamp", "dd/MMM/YYYY:H:m:s Z" ]
  #   }
  # }
}
output {
  stdout { 
    codec => rubydebug 
  }
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    # action => "index"
    # template_name => "logs_elk"
    # document_type => "applicationlogs"
    # index => "logstash-%{[type]}-%{+YYYY.MM.dd}"
    # user => "elastic"
		# password => "changeme"
  }
}